name: Test and publish to registries after new tag

on:
  release:
    types: [published]

jobs:
  # init:
  #   uses: ./.github/workflows/00-init.yml

  # init-playground:
  #   uses: ./.github/workflows/00-init-playground.yml

  # test:
  #   uses: ./.github/workflows/01-npm-test.yml
  #   needs: [init]

  # build:
  #   uses: ./.github/workflows/01-build.yml
  #   needs: [init]

  # build-playground:
  #   uses: ./.github/workflows/01-build-playground.yml
  #   needs: [init-playground]

  # cypress:
  #   uses: ./.github/workflows/01-cypress.yml
  #   needs: [build]

  logtag:
    name: Tag Name
    # needs: [test, cypress]
    # if: startsWith(github.event.ref, 'refs/tags/v')
    if: |
      startsWith(github.ref, 'refs/tags/v') && github.event.release.prerelease == true
    runs-on: ubuntu-latest
    env:
      RELEASE_CONTEXT: ${{ toJson(github.event.release) }}

    steps:
      - name: Log Tag Name
        run: |
          echo ${GITHUB_REF##*/}
          echo "event name is:" ${{ github.event_name }}
          echo "event type is:" ${{ github.event.action }}
          echo "event release tag_name is:" ${{ github.event.release.tag_name }}
          echo "event prerelease is:" ${{ github.event.release.prerelease }}
          echo "event asset dl is:" ${{ github.event.release.assets[0].browser_download_url }}
          echo "event asset dl type is:" ${{ github.event.release.assets[0].content_type }}
          echo "$RELEASE_CONTEXT"
          GIT_HASH_SHORT=$(git rev-parse --short "$GITHUB_SHA")
          echo "GIT_HASH_SHORT $GIT_HASH_SHORT"
          npx find-versions-cli ${{ github.event.release.tag_name }}

  onlyonmain:
    name: Publish stable packages
    if: github.event.release.target_commitish == 'test-package-publishing' && github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Publish stable packages
        run: |
          echo "We are running on: " ${{github.event.release.target_commitish}}
          npx find-versions-cli ${{ github.event.release.tag_name }}
